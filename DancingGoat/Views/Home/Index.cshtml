@model DancingGoat.Models.HomeViewModel
@inject IConfiguration Configuration
@{
    ViewBag.Title = Model.ContentItem.MetadataMetaTitle;
}

<section title="headers" id="head">
    @await Html.PartialAsync("HeadersMetadata", Model.ContentItem)
</section>


@if (Model.Header != null)
{
    var image = Model.Header.Image.FirstOrDefault();
    <section class="banner-section" style="background-image: url('@(image != null ? image.Url : "")');">
        <h2 class="banner-heading">@Html.DisplayFor(vm => vm.Header.Title)</h2>
        <div class="banner-text">
            @Html.DisplayFor(vm => vm.Header.MarketingMessage)
        </div>
    </section>
}

<div class="row">
    <h1 class="title-tab">@Localizer["Articles.LatestOne"]</h1>
    @{var isFirstArticle = true; }
    @foreach (DancingGoat.Models.Article article in @Model.ContentItem.Articles)
    {
        if (isFirstArticle)
        {
            isFirstArticle = false;
            <div class="article-tile article-tile-large">
                <div class="col-md-12 col-lg-6">
                    <a href="@Url.Action("Show", "Articles", new {urlSlug = article.UrlPattern})">
                        @Html.AssetImage(Configuration, article.TeaserImage.FirstOrDefault(), cssClass: "article-tile-image"
                            , sizes: new ResponsiveImageSizes(300).WithMediaCondition(new MediaCondition { MinWidth = 1120, ImageWidth = 540 }).WithMediaCondition(new MediaCondition { MinWidth = 768, MaxWidth = 1120, ImageWidth = 736 }).WithMediaCondition(new MediaCondition { MinWidth = 330, MaxWidth = 768, ImageWidth = 468 }))
                    </a>
                </div>
                <div class="col-md-12 col-lg-6">
                    <div class="article-tile-date">
                        @article.PostDate?.ToString("M")
                    </div>
                    <div class="article-tile-content">
                        <h2>
                            <a href="@Url.Action("Show", "Articles", new { urlSlug = article.UrlPattern })">@article.Title</a>
                        </h2>
                        <p class="article-tile-text lead-paragraph">
                            @Html.DisplayFor(vm => article.Summary)
                        </p>
                    </div>
                </div>
            </div>
        }
        else
        {
            @Html.DisplayFor(vm => article)
        }
    }
</div>

@await Html.PartialAsync("_MoreButtonPartial", new DancingGoat.Models.MoreButtonPartialViewModel { Text = Localizer["Articles.More"], Url = Url.Action("Index", "Articles") })

@foreach (DancingGoat.Models.FactAboutUs factAboutUs in Model.ContentItem.OurStory)
{
    var image = factAboutUs.Image.FirstOrDefault();
    <div class="row">
        <h1 class="title-tab">@factAboutUs.Title</h1>
        <div class="col-sm-12">
            <div class="ourstory-section center-text" style="background-image: url('@(image != null ? image.Url : "")');">
                @Html.DisplayFor(vm => factAboutUs.Description)
            </div>
        </div>
    </div>

    @await Html.PartialAsync("_MoreButtonPartial", new DancingGoat.Models.MoreButtonPartialViewModel { Text = Localizer["Story.WholeStory"], Url = Url.Action("Index", "About") })
}

<div class="row">
    <div>
        <h1 class="title-tab">@Localizer["CompanyCafes.Title"]</h1>
    </div>
    @foreach (DancingGoat.Models.Cafe cafe in Model.ContentItem.Cafes)
    {
        <div class="col-xs-6 col-md-3">
            <div>
                <a href="@Url.Action("Index", "Cafes")" class="ourcoffee-tile-link">
                    <h2 class="ourcoffee-tile-text center-text">@cafe.System.Name</h2>
                    <span class="cafe-overlay"> </span>
                    @Html.AssetImage(Configuration, cafe.Photo.FirstOrDefault(), cssClass: "ourcoffee-tile-image", sizes: new ResponsiveImageSizes(270))
                </a>


            </div>


        </div>
    }
</div>

@await Html.PartialAsync("_MoreButtonPartial", new DancingGoat.Models.MoreButtonPartialViewModel { Text = Localizer["Cafes.More"], Url = Url.Action("Index", "Cafes") })